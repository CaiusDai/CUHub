const express = require('express')
const config = require('../../configs/configs.js')

const HTTPCodes = config.HTTPCode
const admin_router = express.Router()
const { connect_db } = require('../../configs/db')

admin_router.get('/userlist', (req, res) => {
    // Check identity:
    if (!req.session.isAdmin) {
        res.status(HTTPCodes.Unauthorized).json({
            status: 'fail',
            data: {
                error_code: config.ErrorCodes.NotAdmin,
            },
            message: 'Blocking list can only be generated by the admin',
        })
        return
    }
    // Send user list
    const query = 'SELECT user_id, email FROM Account'
    connect_db()
        .then((database) => {
            return database.query(query)
        })
        .then((db_result) => {
            res.status(HTTPCodes.Ok).json({
                status: 'success',
                data: {
                    user_list: db_result.rows,
                },
                message: '[INFO] Generated User information',
            })
        })
})

admin_router.delete('/account/:id', async (req, res) => {
    // Check identity:
    if (!req.session.isAdmin) {
        res.status(HTTPCodes.Unauthorized).json({
            status: 'fail',
            data: {
                error_code: config.ErrorCodes.NotAdmin,
            },
            message: 'Blocking list can only be generated by the admin',
        })
        return
    }

    // Delete the data
    const user_id = req.params.id
    const database = await connect_db()
    const query_following = `UPDATE Profile
                       SET num_of_following = num_of_following - 1
                       WHERE user_id IN (
                       SELECT user1
                       FROM FollowRelationship
                       WHERE user2 = ${user_id} AND status = true
                        );`
    const query_follower = `UPDATE Prfofile SET num_follower = num_of_follower -1
            WHERE user_id IN (
            SELECT user2
            FROM FollowRelationship
            WHERE user1 =${user_id} AND status = true
        )`

    await database.query(query_following)
    await database.query(query_follower)

    // Delete User
    const query_delete = `DELETE FROM Account WHERE user_id = ${user_id}`
    try {
        await database.query(query_delete)
        req.status(HTTPCodes.Ok).json({
            status: 'success',
            data: {},
            message: 'Deletion Succeed',
        })
    } catch (error) {
        console.log('Error: ', error)
        req.status(HTTPCodes.BadRequest).json({
            status: 'error',
            message: `${error}`,
        })
    }
})
module.exports = admin_router
